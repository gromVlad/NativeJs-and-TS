//програмирование - это процесс создание программ ,набор точных инструкций.
//Язык програмирование - это искуственный язык созданный для написание инсрукций на компьютере

//"Когда активная деятельность перестает приносить пользу, начинайте тихо собирать информацию; когда сбор информации перестает приносить пользу, ложитесь спать"

//Компьютер - физическая машина, играющая роль хозяина для этих нематериальных машин. 

// упражнениями, перейдите по адресу https://eloquentjavascript.net / code

//-----------------------
//___Значения, типы и операторы___//

//биты - ноль и единица

//13 -> 00001101 (128,64,32,16,8,4,2,1) Его ненулевые цифры соответствуют 8, 4 и 1, что в сумме дает 13.

9.81
2.998e8 //2.998 * 10(8) = 299800000
100 + 4 * 11 // * - + / - операторы

//При использовании нескольких операторов без скобок порядок их выполнения определяется приоритетом операторов. 

//_Специальные числа
Infinity  // не имеет смысла
NaN  // не число

//_Строки 
'hello'

// экранированием символа
"Это первая строка,\па это вторая" 

//Строки нельзя делить, умножать или вычитать, но оператор + к ним применим. 
'd' + 'h' //dh

//Строки, заключенные в обратные кавычки, обычно называемые литералами шаблонов
`половина от 100 равна ${100/2}`

//_Унарные операции
console.log(typeof 4.5)// number

//Операторы, задействующие два значения, называются бинарными

//_Логические значения 
console.log(З > 2) //true
console.log("Apбyз" < "Яблоко") //true
// При сравнении строк JavaScгipt перебирает символы слева направо, последовательно сравнивая их коды U nicode.

//В JavaScript существует только одно значение, которое не равно самому себе, и это NaN(«не число~). 
console.log(NaN == NaN) // false 

//_Логические операторы
//&& и 
console.log(true && false) // false 
console.log(true && true) // true

//|| или
console.log(false || true)  // true
console.log(false || false) // false

//( ! ) не
!true //false

//троичный оператор
console.log(true ? 1 : 2) //1

//_Пустые значения
undefined //неопределено
null //пустое значения

//_Автоматическое преобразование типов 
console.log("S" - 1)//51
console.log(false == 0) //true
console.log(null == undefined);//true

//_Упрощенное вычисление логических операторов 
console.log(null || "user") //user 
//стр 40

//-------------------------
//Структура программы 

//Выражения и инструкции 
//Простейший вид инструкции 
1;
!false

//__Привязки 
let caught = 5 * 5; 

//Один оператор let может определять несколько привязок.
let one = 1, two = 2;
console.log(one + two); // 3

//Условное выполнение 
if (num < 10) {
  console.log("Maлeнькoe");
} else if (num < 100) {
  console.log("Cpeднee");
} else {
  console.log("Бoльшoe");
} 

//Циклы while и do
let number = 0;
while (number <= 12) {
  console.log(number);
  number = number + 2;
} 
//  ... 0
// ... 2
// и так далее

let yourName;
do {
  yourName = prompt("Kтo вы?");
} while (!yourName);
console.log(yourName); 

//Циклы for 
for (let number = 0; number <= 12; number = number + 2) {
  console.log(number);
}
//  ... 0
// ... 2

//Принудительный выход из цикла 
for (let current = 20; ; current = current + 1) {
  if (current % 7 == 0) {
    console.log(current); 
    break;
  }
}
//... 21 

//Быстрое обновление привязок
counter = counter + 1; 

//Диспетчеризация по значению с помощью switch
switch (key) {
  case value:
    
    break;

  default:
    break;
}

//Использование прописных букв 
fuzzylittleturtle
fuzzy_little_turtle
FuzzylittleTurtle
fuzzyLittleTurtle

//Комментарии 
// Зеленая дыра; цепляясь бездумно, 
/*
Я впервые обнаружил, что это число написано на обороте старой записной
книжки. с тех пор оно мне часто попадалось среди номеров телефонов
и штрихкодов продуктов, которые я покупал. Похоже, я ему понравился,
поэтому я решил его оставить. 
*/

//---------------------------
//__Функции __//
//Функции, которые вообще не имеют инструкции return возвращают undefined. 

const square = function (x) {
  return х * х;
}; //144 

//Привязки и области видимости 
//let и const - локальные для блока
let х = 10;
if (true) {
}
let у = 20;
var z = 30;
console.log(x + у + z);
//привязка у здесь не видна
console.log(x + z);//40 

//Вложенные области видимости 
const hummus = function (factor) {
  const ingredient = function (amount, unit, name) {
    let ingredientAmount amount * factor;
    if (ingredientAmount > 1) {
      unit += "s";
    }
    console.log('${ingredientAmount} ${unit} ${name}');
  };
  ingredient(l, "банка", "нута");
  ingredient(0.25, "стакан", "кунжутной пасты");
  ingredient(0.25, "стакан", "лимонного сока");
  ingredient(l, "зубок", "чеснока");
  ingredient(2, "столовые ложки", "оливкового масла");
  ingredient(0.5, "чайной ложки", "кумина"); 
}

//Функции как значения 



